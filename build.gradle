/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'mateusz' at '3/15/15 1:16 PM' with Gradle 2.3
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.3/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'


sourceCompatibility = 1.7
version = '1.0'



// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
}

war {
    rootSpec.exclude("**/tomcat-*.jar")
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'log4j:log4j:1.2.17'
    compile 'org.apache.tomcat.maven:tomcat7-maven-plugin:2.2'
    compile 'org.apache.tomcat:tomcat-catalina:7.0.47'
    compile 'com.sun.jersey:jersey-server:1.8'
    compile 'com.sun.jersey:jersey-json:1.8'
    compile 'com.hp.gagawa:gagawa:1.0.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
    testCompile 'org.assertj:assertj-core:2.0.0'
}

